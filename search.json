[{"path":"https://github.com/stufield/gitr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 gitr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://github.com/stufield/gitr/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"create issue ","code":""},{"path":"https://github.com/stufield/gitr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with SomaDataIO","title":"Getting help with SomaDataIO","text":"Thanks using SomaDataIO! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://github.com/stufield/gitr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with SomaDataIO","text":"can’t reproduce bug, can’t fix ! Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (excellent ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help!.","code":""},{"path":"https://github.com/stufield/gitr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with SomaDataIO","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com /StackOverflow. people answer questions. ’s bug: ’re right place -> file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers, :pr, :closed, etc., needed, e.g. ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://github.com/stufield/gitr/articles/gitr.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to gitr","text":"gitr package light-weight, dependency-free, API access system-level git commands within R. Contains wrappers defaults common data science workflows well Z-shell plugin aliases. Generalized API syntax also available. system installation git required.","code":""},{"path":"https://github.com/stufield/gitr/articles/gitr.html","id":"main-features","dir":"Articles","previous_headings":"Overview","what":"Main Features","title":"Introduction to gitr","text":"system call wrapper: [git()] Common git tasks: committing commit stack branches pull requests tags situation report ZSH git plugin aliases common aliases ZSH-git-plugin","code":""},{"path":"https://github.com/stufield/gitr/articles/gitr.html","id":"workflows-and-examples-todo","dir":"Articles","previous_headings":"Overview","what":"Workflows and examples (TODO)","title":"Introduction to gitr","text":"section become fleshed future versions gitr meantime please see package README","code":""},{"path":"https://github.com/stufield/gitr/articles/gitr.html","id":"mit-license","dir":"Articles","previous_headings":"Overview","what":"MIT LICENSE","title":"Introduction to gitr","text":"See LICENSE https://choosealicense.com/licenses/mit/ https://tldrlegal.com/license/mit-license/","code":""},{"path":"https://github.com/stufield/gitr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stu Field. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/stufield/gitr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Field S (2023). gitr: Lightweight API 'Git'. R package version 0.0.1, https://stufield.github.io/gitr/.","code":"@Manual{,   title = {gitr: A Lightweight API for 'Git'},   author = {Stu Field},   year = {2023},   note = {R package version 0.0.1},   url = {https://stufield.github.io/gitr/}, }"},{"path":"https://github.com/stufield/gitr/index.html","id":"gitr","dir":"","previous_headings":"","what":"A Lightweight API for Git","title":"A Lightweight API for Git","text":"light-weight, dependency-free, application programming interface (API) access system-level Git commands within R. Contains wrappers defaults common data science workflows well Zsh plugin aliases (see ). generalized API syntax also available. system installation Git required. run issues/problems gitr full documentation recent release can found pkgdown website. issue persists encourage consult issues page , appropriate, submit issue /feature request.","code":""},{"path":"https://github.com/stufield/gitr/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"A Lightweight API for Git","text":"Use risk 😺, however, PRs encouraged ideas ’ve missed. functionality contained gitr heavily influenced personal data science workflows may suit users. However, idea make package better, widely usable, /efficient, please submit issue pull request.","code":""},{"path":"https://github.com/stufield/gitr/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"A Lightweight API for Git","text":"easiest way install gitr install directly CRAN: Alternatively install development version GitHub: install specific tagged release, use:","code":"install.packages(\"gitr\") remotes::install_github(\"stufield/gitr\") remotes::install_github(\"stufield/gitr@v0.0.1\")"},{"path":"https://github.com/stufield/gitr/index.html","id":"loading","dir":"","previous_headings":"","what":"Loading","title":"A Lightweight API for Git","text":"","code":"library(gitr)"},{"path":"https://github.com/stufield/gitr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Lightweight API for Git","text":"basic examples functionality grouped common actions:","code":""},{"path":"https://github.com/stufield/gitr/index.html","id":"basics","dir":"","previous_headings":"Examples","what":"Basics","title":"A Lightweight API for Git","text":"","code":"git_version() #> [1] \"2.39.0\" git_current_br() #> [1] \"main\" git_default_br() #> [1] \"main\""},{"path":"https://github.com/stufield/gitr/index.html","id":"the-core-engine","dir":"","previous_headings":"Examples","what":"The Core Engine","title":"A Lightweight API for Git","text":"","code":"(git(\"branch\", \"foo\")) #> Running git branch foo #> $status #> [1] 0 #>  #> $stdout #> [1] \"\" #>  #> $stderr #> [1] \"\"  git(\"branch\", \"-av\")$stdout |>   cat(sep = \"\\n\") #> Running git branch -av  #>   foo                                    d6cbbb9 Update DESCRIPTION with tidytemplate Needs #>   force-pkgdown                          72ad53a wip #> * main                                   d6cbbb9 Update DESCRIPTION with tidytemplate Needs #>   remotes/origin/HEAD                    -> origin/main #>   remotes/origin/bugfix-get-pr-sha       ce27db7 Fix bug in get_pr_sha() (#11) #>   remotes/origin/force-pkgdown           72ad53a wip #>   remotes/origin/gh-pages                be5ce29 Built site for gitr: 0.0.1@dbedad6 #>   remotes/origin/main                    d6cbbb9 Update DESCRIPTION with tidytemplate Needs #>   remotes/origin/prep-for-cran           bb5a9bf Clean up URLs #>   remotes/origin/submit-cran             378ef59 Increment version number to 0.0.1 #>   remotes/origin/update-pkgdown-new-look 0018001 Update GHAs  git(\"branch\", \"-D\", \"foo\")$stdout #> Running git branch -D foo #> [1] \"Deleted branch foo (was d6cbbb9).\""},{"path":"https://github.com/stufield/gitr/index.html","id":"committing","dir":"","previous_headings":"Examples","what":"Committing","title":"A Lightweight API for Git","text":"","code":"get_commit_msgs(n = 3) #> Running git log --format=%H -n 3 #> [[1]] #> [1] \"Update DESCRIPTION with tidytemplate Needs\" \"\"                                           #> attr(,\"sha\") #> [1] \"d6cbbb9\" #> attr(,\"author\") #> [1] \"stu.g.field@gmail.com\" #>  #> [[2]] #> [1] \"New pkgdown tidy theme and bootstrap 5\" \"\"                                       #> attr(,\"sha\") #> [1] \"0ae6d0c\" #> attr(,\"author\") #> [1] \"stu.g.field@gmail.com\" #>  #> [[3]] #> [1] \"Improve GHA triggers\" \"\"                     #> attr(,\"sha\") #> [1] \"9d669f2\" #> attr(,\"author\") #> [1] \"stu.g.field@gmail.com\" glog(5) #> Running git log --oneline --graph --decorate -n 5  #> * d6cbbb9 (HEAD -> main, origin/main, origin/HEAD) Update DESCRIPTION with tidytemplate Needs #> * 0ae6d0c New pkgdown tidy theme and bootstrap 5 #> * 9d669f2 Improve GHA triggers #> * 179896e fix test-coverage.yaml to upload to Codecov #> * 0d17278 correct .gitignore git_diffcommits() #> Running git diff HEAD~2..HEAD~1  #> diff --git a/_pkgdown.yml b/_pkgdown.yml #> index 65a4632..a09b3e3 100644 #> --- a/_pkgdown.yml #> +++ b/_pkgdown.yml #> @@ -1,13 +1,20 @@ #>  url: https://github.com/stufield/gitr #>   #> +development: #> +  mode: auto #> + #> +authors: #> +  Stu Field: #> +    href: https://github.com/stufield #> + #>  home: #> -  strip_header: true #>    links: #>    - text: Learn more about me #>      href: https://github.com/stufield #>   #>  template: #>    bootstrap: 5 #> +  package: tidytemplate #>    bslib: #>      bg: \"#202123\"      # dark theme #>      fg: \"#B8BCC2\"      # dark theme #> @@ -16,13 +23,6 @@ template: #>      btn-border-radius: 0.25rem #>      base_font: {google: \"Roboto\"} #>   #> -authors: #> -  Stu Field: #> -    href: https://github.com/stufield #> - #> -development: #> -  mode: auto #> - #>  articles: #>    - title: Getting Started #>      navbar: ~ git_reset_hard() git_reset_soft() git_uncommit() git_unstage(\"DESCRIPTION\")"},{"path":"https://github.com/stufield/gitr/index.html","id":"sha1","dir":"","previous_headings":"Examples","what":"SHA1","title":"A Lightweight API for Git","text":"","code":"is_sha(\"d670c93733f3e1d7c95df7f61ebf6ca0476f14e3\") #> [1] TRUE  is_sha(\"foo\") #> [1] FALSE  trim_sha(\"d670c93733f3e1d7c95df7f61ebf6ca0476f14e3\") #> [1] \"d670c93\"  trim_sha(\"foo\") #> [1] \"foo\""},{"path":"https://github.com/stufield/gitr/index.html","id":"tags","dir":"","previous_headings":"Examples","what":"Tags","title":"A Lightweight API for Git","text":"","code":"git_recent_tag() #> Running git tag -n #> [1] \"v0.0.1\" git_tag_info() #>           tag tag_sha target_sha           message    author                   email        user #> v0.0.1 v0.0.1 fc7e99a    5e98f89 Release of v0.0.1 Stu Field <stu.g.field@gmail.com> stu.g.field #>                               tagdate size                       path #> v0.0.1 Wed Feb 15 12:53:58 2023 -0700  148 /Users/sfield/gh/gitr/.git"},{"path":"https://github.com/stufield/gitr/index.html","id":"situation-report","dir":"","previous_headings":"Examples","what":"Situation Report","title":"A Lightweight API for Git","text":"","code":"git_sitrep() #> Using Git version: 2.39.0  #>  #> Current branch: main #> Default branch: main  #>  #> Repo status: #> Running git status -s  #>  M Makefile #>  M README.Rmd #>  #> Branches: #> Running git branch -a  #>   force-pkgdown #> * main #>   remotes/origin/HEAD -> origin/main #>   remotes/origin/bugfix-get-pr-sha #>   remotes/origin/force-pkgdown #>   remotes/origin/gh-pages #>   remotes/origin/main #>   remotes/origin/prep-for-cran #>   remotes/origin/submit-cran #>   remotes/origin/update-pkgdown-new-look #>  #> Local status: #> ✓ OK #>  #> Upstream remotes: origin  #>   force-pkgdown 72ad53a [origin/force-pkgdown] wip #> * main          d6cbbb9 [origin/main] Update DESCRIPTION with tidytemplate Needs #>  #> Commit log: main  #> Running git log --oneline --graph --decorate -n 5  #> * d6cbbb9 (HEAD -> main, origin/main, origin/HEAD) Update DESCRIPTION with tidytemplate Needs #> * 0ae6d0c New pkgdown tidy theme and bootstrap 5 #> * 9d669f2 Improve GHA triggers #> * 179896e fix test-coverage.yaml to upload to Codecov #> * 0d17278 correct .gitignore"},{"path":[]},{"path":"https://github.com/stufield/gitr/index.html","id":"full-list-of-zsh-aliases","dir":"","previous_headings":"","what":"Full list of ZSH-aliases","title":"A Lightweight API for Git","text":"general reference, list available aliases via git-plugin Oh--Zsh. See also Oh--Zsh general installation.","code":""},{"path":[]},{"path":"https://github.com/stufield/gitr/index.html","id":"license","dir":"","previous_headings":"Full list of ZSH-aliases","what":"LICENSE","title":"A Lightweight API for Git","text":"Please note package package released LICENSE. using package agree abide terms.","code":""},{"path":"https://github.com/stufield/gitr/pull_request_template.html","id":"overview-of-pull-request","dir":"","previous_headings":"","what":"Overview of Pull Request","title":"NA","text":"General description purpose pull request … Fixes #","code":""},{"path":"https://github.com/stufield/gitr/pull_request_template.html","id":"change-type","dir":"","previous_headings":"Overview of Pull Request","what":"Change type","title":"NA","text":"Please check relevant box(es): New feature (non-breaking change adds functionality) Bug fix (non-breaking change fixes issue) Breaking change (fix feature causing API change) Documentation update Package maintenance (structural, non-code, non-breaking changes) README change LICENSE changes","code":""},{"path":"https://github.com/stufield/gitr/pull_request_template.html","id":"code","dir":"","previous_headings":"Overview of Pull Request","what":"Code","title":"NA","text":"","code":"head(mtcars)"},{"path":"https://github.com/stufield/gitr/pull_request_template.html","id":"main-changes","dir":"","previous_headings":"Overview of Pull Request","what":"Main changes","title":"NA","text":"bullet 1 bullet 2 bullet 3","code":""},{"path":"https://github.com/stufield/gitr/reference/branch.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Branch Utilities — branch","title":"Git Branch Utilities — branch","text":"Git Branch Utilities","code":""},{"path":"https://github.com/stufield/gitr/reference/branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Branch Utilities — branch","text":"","code":"git_default_br()  git_current_br()"},{"path":"https://github.com/stufield/gitr/reference/branch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git Branch Utilities — branch","text":"Character. name respective branch found, otherwise NULL.","code":""},{"path":"https://github.com/stufield/gitr/reference/branch.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Git Branch Utilities — branch","text":"git_default_br(): gets default \"main\" branch, typically either master, main, trunk. git_current_br(): gets current branch.","code":""},{"path":"https://github.com/stufield/gitr/reference/commit.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Commit Utilities — commit","title":"Git Commit Utilities — commit","text":"Git Commit Utilities","code":""},{"path":"https://github.com/stufield/gitr/reference/commit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Commit Utilities — commit","text":"","code":"get_commit_msgs(sha = NULL, n = 1)  scrape_commits(n)  git_unstage(file = NULL)  git_reset_soft(n = 1)  git_uncommit()  git_reset_hard()  git_diffcommits(top = 1, n = 2)"},{"path":"https://github.com/stufield/gitr/reference/commit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Git Commit Utilities — commit","text":"sha Character. commit SHA-1 hash pull messages . NULL, recent commit current branch. n Numeric. far back go current HEAD. command line git log -n parameter. git stash commands, zero-index stash list. file Character. path name file. top Numeric. commit consider \"top\" commit stack. Defaults HEAD n = 1.","code":""},{"path":"https://github.com/stufield/gitr/reference/commit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git Commit Utilities — commit","text":"NULL ... invisibly. list containing commit message entries. sha author commit added attributes.","code":""},{"path":"https://github.com/stufield/gitr/reference/commit.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Git Commit Utilities — commit","text":"get_commit_msgs(): gets commit messages corresponding commit sha. scrape_commits(): scrapes n commit messages useful change log commits used create NEWS.md. git_unstage(): un-stages file index working directory. Default un-stages files. git_reset_soft(): un-commits recently committed file(s) add staging area. git_uncommit(): un-commits recently committed file(s) add staging area. Wrapper around git_reset_soft() git_reset_hard(): git reset --hard origin/<branch>. git_diffcommits(): gets diff corresponding 2 commits. Order matters.","code":""},{"path":"https://github.com/stufield/gitr/reference/git.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Utilities — git","title":"Git Utilities — git","text":"Provides functionality system-level git commands within R.","code":""},{"path":"https://github.com/stufield/gitr/reference/git.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Utilities — git","text":"","code":"git(..., echo_cmd = TRUE)  is_git()  git_version()  git_checkout(branch = NULL)"},{"path":"https://github.com/stufield/gitr/reference/git.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Git Utilities — git","text":"... Additional arguments passed system command-line git <command> [<args>] call. echo_cmd Logical. Whether print command run console. branch Character. name branch, typically feature branch.","code":""},{"path":"https://github.com/stufield/gitr/reference/git.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git Utilities — git","text":"git(): system call ... invisibly. is_git(): Logical. git_version(): Character. system version git. git_checkout(): NULL ... invisibly.","code":""},{"path":"https://github.com/stufield/gitr/reference/git.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Git Utilities — git","text":"git(): executes git command line call within R. is_git(): current working directory git repository? git_version(): gets version git use. git_checkout(): git checkout branch exist. Branch oriented workflow switching branches.","code":""},{"path":"https://github.com/stufield/gitr/reference/git.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Git Utilities — git","text":"","code":"if (FALSE) { git(\"status\", \"-s\")  get_commit_msgs()  get_commit_msgs(n = 3)  get_pr_msgs()  # lint most recent 3 commit message lapply(get_commit_msgs(n = 3), lint_commit_msg)  # for a PR `branch` -> `remotes/origin/{main,master}` lapply(get_pr_msgs(), lint_commit_msg)           # current branch lapply(get_pr_msgs(\"feature\"), lint_commit_msg)  # `feature` branch  get_recent_tag() }"},{"path":"https://github.com/stufield/gitr/reference/git_sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Situation Report — git_sitrep","title":"Git Situation Report — git_sitrep","text":"Get situation report current git repository.","code":""},{"path":"https://github.com/stufield/gitr/reference/git_sitrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Situation Report — git_sitrep","text":"","code":"git_sitrep()"},{"path":"https://github.com/stufield/gitr/reference/git_sitrep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git Situation Report — git_sitrep","text":"NULL ... invisibly.","code":""},{"path":"https://github.com/stufield/gitr/reference/gitr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gitr: A Lightweight API for 'Git' — gitr-package","title":"gitr: A Lightweight API for 'Git' — gitr-package","text":"light-weight, dependency-free, application programming interface (API) access system-level 'Git' commands within 'R'. Contains wrappers defaults common data science workflows well 'Zsh' https://github.com/ohmyzsh/ohmyzsh plugin aliases. generalized API syntax also available. system installation 'Git' https://git-scm.com/downloads required.","code":""},{"path":[]},{"path":"https://github.com/stufield/gitr/reference/gitr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gitr: A Lightweight API for 'Git' — gitr-package","text":"Maintainer: Stu Field stu.g.field@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://github.com/stufield/gitr/reference/lint.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Lints for Commit Messages — lint","title":"Common Lints for Commit Messages — lint","text":"Lint commit message typical commit style best practices git.","code":""},{"path":"https://github.com/stufield/gitr/reference/lint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common Lints for Commit Messages — lint","text":"","code":"lint_commit_msg(x)"},{"path":"https://github.com/stufield/gitr/reference/lint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Lints for Commit Messages — lint","text":"x single commit message get_commit_msgs().","code":""},{"path":"https://github.com/stufield/gitr/reference/lint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common Lints for Commit Messages — lint","text":"Integer. Invisibly returns number detected lints message.","code":""},{"path":"https://github.com/stufield/gitr/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Parameters for gitr — params","title":"Common Parameters for gitr — params","text":"Common Parameters gitr","code":""},{"path":"https://github.com/stufield/gitr/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Parameters for gitr — params","text":"n Numeric. far back go current HEAD. command line git log -n parameter. git stash commands, zero-index stash list. file Character. path name file. branch Character. name branch, typically feature branch. sha Character. commit SHA-1 hash pull messages . NULL, recent commit current branch.","code":""},{"path":"https://github.com/stufield/gitr/reference/pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Git PR Utilities — pr","title":"Git PR Utilities — pr","text":"Git PR Utilities","code":""},{"path":"https://github.com/stufield/gitr/reference/pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git PR Utilities — pr","text":"","code":"get_pr_msgs(branch = NULL)  get_pr_sha(branch = NULL)"},{"path":"https://github.com/stufield/gitr/reference/pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Git PR Utilities — pr","text":"branch Character. name branch, typically feature branch.","code":""},{"path":"https://github.com/stufield/gitr/reference/pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git PR Utilities — pr","text":"get_pr_msgs(): see get_commit_msgs(). get_pr_sha(): character vector shas corresponding PR (relative default branch).","code":""},{"path":"https://github.com/stufield/gitr/reference/pr.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Git PR Utilities — pr","text":"get_pr_msgs(): gets commit messages current branch relative origin/{main,master} branch remote. Typically \"new\" commits merged part PR origin/{main,master}. get_pr_sha(): gets commit SHA1 current branch relative default branch remote, usually either origin/main origin/master. See git_default_br().","code":""},{"path":"https://github.com/stufield/gitr/reference/sha.html","id":null,"dir":"Reference","previous_headings":"","what":"SHA1 Utilities — sha","title":"SHA1 Utilities — sha","text":"SHA1 Utilities","code":""},{"path":"https://github.com/stufield/gitr/reference/sha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHA1 Utilities — sha","text":"","code":"trim_sha(sha)  is_sha(sha)"},{"path":"https://github.com/stufield/gitr/reference/sha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHA1 Utilities — sha","text":"sha Character. commit SHA-1 hash pull messages . NULL, recent commit current branch.","code":""},{"path":"https://github.com/stufield/gitr/reference/sha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHA1 Utilities — sha","text":"trim_sha(): Character. trimmed sha. sha SHA1 hash, identical string unchanged. is_sha(): Logical. sha matches SHA1 expected pattern.","code":""},{"path":"https://github.com/stufield/gitr/reference/sha.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SHA1 Utilities — sha","text":"trim_sha(): trims SHA-1 hash default full length human-readable short version. is_sha(): determines whether strings tested SHA1 hash via regular expression (\"^[-f0-9]{5,40}$\") match.","code":""},{"path":[]},{"path":"https://github.com/stufield/gitr/reference/tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Git Tag Utilities — tag","title":"Git Tag Utilities — tag","text":"Git Tag Utilities","code":""},{"path":"https://github.com/stufield/gitr/reference/tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Git Tag Utilities — tag","text":"","code":"git_recent_tag()  git_tag_info()"},{"path":"https://github.com/stufield/gitr/reference/tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Git Tag Utilities — tag","text":"git_recent_tag(): Character. recent tag. git_tag_info(): data frame summarizing repository tags.","code":""},{"path":"https://github.com/stufield/gitr/reference/tag.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Git Tag Utilities — tag","text":"git_recent_tag(): gets recent git tag. git_tag_info(): gets data frame summary current git repository tags.","code":""},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-shell Aliases — zsh","title":"Z-shell Aliases — zsh","text":"Provides functions common Z-shell git plugin aliases.","code":""},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-shell Aliases — zsh","text":"","code":"glog(n = 10)  gcc(...)  gcmsg(msg = \"wip\")  gco(branch = NULL)  gcb(branch = NULL)  gpr()  gp(...)  gpu()  gpd()  gst()  gss()  gba()  gbd(branch = NULL, force = FALSE)  gbmm(branch = git_default_br())  gbnm(branch = git_default_br())  gbm(branch = NULL)  ga(...)  gaa()  gau()  gsta()  gstl()  gstaa(n = 0)  gstd(n = 0)  gstc()  gsts(text = FALSE)  gpop()  gstp()  gtn()  gfa()  gac()  gwip()  gclean(dry.run = TRUE)  gdf(file = NULL, staged = FALSE)  gpf()  gnuke()  gcf(global = FALSE)  gcm()  grm(...)  grbc()  grba()  grbs()  grbm()  grv()"},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-shell Aliases — zsh","text":"n Numeric. far back go current HEAD. command line git log -n parameter. git stash commands, zero-index stash list. ... Additional arguments passed system command-line git <command> [<args>] call. msg Character. message commit subject line. branch Character. name branch, typically feature branch. force Logical. branch delete forced -D flag? text Logical. Show text diffs stash. dry.run Logical. Clean dry-run? file full file path within repository diff. staged Logical. Compare staged file HEAD? Otherwise working directory compared index (staged HEAD). global Logical. Query global repository. Alternatively local configuration .","code":""},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-shell Aliases — zsh","text":"aliases invisibly return NULL ... exceptions.","code":""},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Z-shell Aliases — zsh","text":"glog(): Get git log pretty format n recent commits. gcc(): git commit .... avoid masking base::gc() function, alias re-mapped gcc(). gcmsg(): git commit -m <msg>. gco(): git checkout. gcb(): git checkout -b <branch>. gpr(): git pull --rebase. gp(): git push. gpu(): git push -u origin. gpd(): git push --dry-run. gst(): git status. gss(): git status -s. gba(): git branch -. gbd(): git branch -dD. gbmm(): git branch --merged <branch>. gbnm(): git branch ---merged <branch>. gbm(): git branch -m. ga(): git add .... gaa(): git add --. gau(): git add -u. gsta(): git stash. gstl(): git stash list. gstaa(): git stash apply. Note: zero-indexing! gstd(): git stash drop. Note: zero-indexing! gstc(): git stash clear. Danger! gsts(): git stash show. gpop(): git stash pop --quiet --index. gstp(): See gpop(). gtn(): git tag -n. gfa(): git fetch ----prune. gac(): git commit ---verify --amend ---edit. gwip(): git commit ---verify -m 'wip'. gclean(): git clean -f -d. gdf(): git diff <file>. gpf(): git push --force--lease. gnuke(): git reset --hard && git clean -df. gcf(): git config --local git config --global. gcm(): Checkout default branch. grm(): git rm .... grbc(): git rebase --continue. grba(): git rebase --abort. grbs(): git rebase --skip. grbm(): git rebase git_default_br(). grv(): git remote -v.","code":""},{"path":"https://github.com/stufield/gitr/reference/zsh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Z-shell Aliases — zsh","text":"","code":"if (FALSE) {   glog() }"},{"path":"https://github.com/stufield/gitr/news/index.html","id":"gitr-development-version","dir":"Changelog","previous_headings":"","what":"gitr (development version)","title":"gitr (development version)","text":"is_sha() now exported test regex expected SHA1 pattern (@stufield, #9)","code":""},{"path":"https://github.com/stufield/gitr/news/index.html","id":"gitr-001-tada","dir":"Changelog","previous_headings":"","what":"gitr 0.0.1 🎉","title":"gitr 0.0.1 🎉","text":"CRAN release: 2023-02-15 Now released (#7) CRAN! 🥳 package repository restructured now functions easier find new pkgdown website added documentation improved preparations made package release CRAN Samples templates sample git hooks added package inst/ _gitignore_global _gitconfig commit-msg-template","code":""},{"path":"https://github.com/stufield/gitr/news/index.html","id":"gitr-0009000","dir":"Changelog","previous_headings":"","what":"gitr 0.0.0.9000","title":"gitr 0.0.0.9000","text":"Initial public release GitHub!","code":""}]
